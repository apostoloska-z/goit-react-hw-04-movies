{"version":3,"sources":["services/movies-api.js","No-image.jpg","components/MovieList/MovieList.js","components/Searchbar/Searchbar.js","views/MoviesPageView.js"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","a","axios","get","response","data","results","fetchMovieByQuery","query","fetchMovieInfoById","movieId","fetchCastById","cast","fetchReviewsById","withRouter","movies","location","className","map","movie","to","pathname","id","state","from","src","poster_path","noImage","alt","original_title","title","Searchbar","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","MoviesPageView","searchQuery","onChangeQuery","uploadMoviesPage","then","result","search","replace","prevState","MovieList"],"mappings":"iWAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAmB,uCAAG,4BAAAC,EAAA,sEACRC,IAClBC,IADkB,UACXL,EADW,sCAC2BC,IAFnB,cACzBK,EADyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMnBC,EAAiB,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACNC,IAClBC,IADkB,UACXL,EADW,gCACqBC,EADrB,kBACsCS,EADtC,gCADM,cACvBJ,EADuB,yBAGtBA,EAASC,KAAKC,SAHQ,2CAAH,sDAMjBG,EAAkB,uCAAG,WAAOC,GAAP,eAAAT,EAAA,sEACPC,IAClBC,IADkB,UACXL,EADW,iBACMY,EADN,oBACyBX,IAFlB,cACxBK,EADwB,yBAGvBA,EAASC,MAHc,2CAAH,sDAMlBM,EAAa,uCAAG,WAAOD,GAAP,eAAAT,EAAA,sEACFC,IAClBC,IADkB,UACXL,EADW,iBACMY,EADN,4BACiCX,EADjC,YADE,cACnBK,EADmB,yBAGlBA,EAASC,KAAKO,MAHI,2CAAH,sDAMbC,EAAgB,uCAAG,WAAOH,GAAP,eAAAT,EAAA,sEACLC,IAClBC,IADkB,UACXL,EADW,iBACMY,EADN,4BACiCX,EADjC,YADK,cACtBK,EADsB,yBAGrBA,EAASC,KAAKC,SAHO,2CAAH,uD,gCC7Bd,QAA0B,sC,8HC2B1BQ,eAvBG,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OACd,oBAAIC,UAAU,aAAd,SACKF,EAAOG,KAAI,SAAAC,GAAK,OACb,oBAAIF,UAAU,mBAAd,SACI,eAAC,IAAD,CAAMG,GAAI,CACNC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CACHC,KAAMR,IAHd,UAMI,qBACIC,UAAW,eACXQ,IAAKN,EAAMO,YAAN,yCAAqDP,EAAMO,aAAeC,IAC/EC,IAAKT,EAAMU,iBAEf,oBAAIZ,UAAU,cAAd,SAA6BE,EAAMW,YAZLX,EAAMG,a,sHCqCzCS,E,4MAxCXR,MAAQ,CACJf,MAAO,I,EAGXwB,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAC1B,MAAOyB,EAAME,cAAcC,S,EAG9CC,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKjB,MAAMf,OAC/B,EAAK0B,SAAS,CAAC1B,MAAM,M,4CAGzB,WACI,OAEA,uBAAMS,UAAU,OAAOuB,SAAUC,KAAKJ,aAAtC,UACI,uBACIpB,UAAU,cACVyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZT,MAAOK,KAAKlB,MAAMf,MAClBsC,SAAUL,KAAKT,eAGnB,wBACIf,UAAU,eACVyB,KAAK,SAFT,2B,GA7BYK,a,gBCGlBC,E,4MACFzB,MAAQ,CACJR,OAAQ,GACRkC,YAAa,I,EAqBjBC,cAAgB,SAAA1C,GACZ,EAAK0B,SAAS,CACVe,YAAazC,EACbO,OAAQ,M,EAIhBoC,iBAAmB,WACf,IAAQF,EAAgB,EAAK1B,MAArB0B,YAER1C,YAAkB0C,GACbG,MAAK,SAAAC,GACF,EAAKnB,SAAS,CAAEnB,OAAQsC,Q,uDA9BpC,WACI,IAAQrC,EAAayB,KAAKF,MAAlBvB,SAEJA,EAASsC,SACbtC,EAASsC,OAAStC,EAASsC,OAAOC,QAAQ,OAAQ,IAClDd,KAAKP,SAAS,CAAEe,YAAajC,EAASsC,Y,gCAI1C,SAAmBE,GACXA,EAAUP,cAAgBR,KAAKlB,MAAM0B,aACrCR,KAAKU,mBAEYV,KAAKF,MAAlBvB,SACCsC,OAASb,KAAKlB,MAAM0B,c,oBAoBjC,WACI,OACI,qCACA,cAAC,EAAD,CACIT,SAAUC,KAAKS,gBAEnB,cAACO,EAAA,EAAD,CACI1C,OAAQ0B,KAAKlB,MAAMR,gB,GA/CNgC,aAwDdC","file":"static/js/movies-page.bb9bb37e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'd20d59385a24fc2bb8d46bbba54c1ffd';\r\n\r\nexport const fetchTrendingMovies = async () => {\r\n    const response = await axios\r\n        .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\r\n    return response.data.results;\r\n};\r\n\r\nexport const fetchMovieByQuery = async (query) => {\r\n    const response = await axios\r\n        .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`);\r\n    return response.data.results;\r\n}\r\n\r\nexport const fetchMovieInfoById = async (movieId) => {\r\n    const response = await axios\r\n        .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\r\n    return response.data;\r\n}\r\n\r\nexport const fetchCastById = async (movieId) => {\r\n    const response = await axios\r\n        .get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&page=1`);\r\n    return response.data.cast;\r\n}\r\n\r\nexport const fetchReviewsById = async (movieId) => {\r\n    const response = await axios\r\n        .get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&page=1`);\r\n    return response.data.results;\r\n}","export default __webpack_public_path__ + \"static/media/No-image.35c079b5.jpg\";","import \"./MovieList.scss\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport noImage from \"../../No-image.jpg\"\r\n\r\nconst MovieList = ({movies, location}) => (\r\n    <ul className=\"movie-list\">\r\n        {movies.map(movie => (\r\n            <li className=\"movie-list__item\" key={movie.id}>\r\n                <Link to={{\r\n                    pathname: `/movies/${movie.id}`,\r\n                    state: {\r\n                        from: location,\r\n                    }\r\n                }}>\r\n                    <img\r\n                        className =\"movie-poster\"\r\n                        src={movie.poster_path? `https://image.tmdb.org/t/p/w500${movie.poster_path}`: noImage}\r\n                        alt={movie.original_title}>\r\n                    </img>\r\n                    <h2 className=\"movie-title\">{movie.title}</h2>\r\n\r\n                </Link>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default withRouter(MovieList);","import \"./Searchbar.scss\"\r\nimport { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query: \"\",\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({query: event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({query:''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n            <input\r\n                className=\"form__input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search movies\"\r\n                value={this.state.query}\r\n                onChange={this.handleChange}\r\n            >    \r\n            </input>\r\n            <button\r\n                className=\"form__button\"\r\n                type=\"submit\">\r\n                 Search\r\n            </button>\r\n        </form>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Searchbar;","import { Component } from 'react';\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport MovieList from \"../components/MovieList\";\r\nimport { fetchMovieByQuery } from \"../services/movies-api.js\";\r\n\r\n\r\nclass MoviesPageView extends Component {\r\n    state = {\r\n        movies: [],\r\n        searchQuery: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location } = this.props;\r\n\r\n        if (location.search) {\r\n        location.search = location.search.replace(/^\\?+/, '');\r\n        this.setState({ searchQuery: location.search });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery) {\r\n            this.uploadMoviesPage();\r\n        }\r\n        const { location } = this.props;\r\n        location.search = this.state.searchQuery;\r\n    }\r\n\r\n\r\n    onChangeQuery = query => {\r\n        this.setState({\r\n            searchQuery: query,\r\n            movies: [],\r\n        })\r\n    }\r\n\r\n    uploadMoviesPage = () => {\r\n        const { searchQuery } = this.state;\r\n     \r\n        fetchMovieByQuery(searchQuery)\r\n            .then(result => {\r\n                this.setState({ movies: result })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Searchbar \r\n                onSubmit={this.onChangeQuery}\r\n            />\r\n            <MovieList\r\n                movies={this.state.movies}\r\n            />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MoviesPageView;"],"sourceRoot":""}